{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","list","setList","console","log","removeItem","index","newArray","splice","className","onClick","document","getElementsByClassName","value","type","defaultValue","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yOAyCeA,MAtCf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACAC,QAAQC,IAAIH,GACZ,IAAMI,EAAa,SAACC,GAClB,IAAMC,EAAQ,YAAON,GACrBM,EAASC,OAAOF,EAAO,GACvBJ,EAAQK,IAGV,OACE,8BACE,sBAAKE,UAAU,mBAAf,UACE,qBACEA,UAAU,eACVC,QAAS,kBACPR,EAAQ,GAAD,mBACFD,GADE,CAELU,SAASC,uBAAuB,SAAS,GAAGC,UALlD,iBASA,qBAAKJ,UAAU,eACf,qBAAKA,UAAU,cAEjB,uBAAOA,UAAU,QAAQK,KAAK,OAAOC,aAAa,aAClD,qBAAKN,UAAU,OAAf,SACGR,EAAKe,KAAI,SAACC,EAAMX,GACf,OACE,qBAAKG,UAAU,YAAYC,QAASL,EAApC,SACGY,aCpBAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BZ,M","file":"static/js/main.5d9ad381.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [list, setList] = useState([]);\n  console.log(list);\n  const removeItem = (index) => {\n    const newArray = [...list];\n    newArray.splice(index, 1);\n    setList(newArray);\n  };\n\n  return (\n    <p>\n      <div className=\"button-container\">\n        <div\n          className=\"button green\"\n          onClick={() =>\n            setList([\n              ...list,\n              document.getElementsByClassName(\"input\")[0].value,\n            ])\n          }\n        >add</div>\n        <div className=\"button red\"></div>\n        <div className=\"button\"></div>\n      </div>\n      <input className=\"input\" type=\"text\" defaultValue=\"new task\"/>\n      <div className=\"list\">\n        {list.map((item, index) => {\n          return (\n            <div className=\"list-item\" onClick={removeItem}>\n              {item}\n            </div>\n          );\n        })}\n      </div>\n    </p>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}