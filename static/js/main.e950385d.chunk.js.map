{"version":3,"sources":["x.png","App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","list","setList","console","log","removeItem","index","newArray","splice","className","type","defaultValue","onKeyDown","e","key","document","getElementsByClassName","click","onClick","value","map","item","alt","src","Remove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0NAAe,G,MAAA,IAA0B,+B,OCoE1BA,MAhEf,WACE,MAAwBC,mBAAS,CAAC,eAAlC,mBAAOC,EAAP,KAAaC,EAAb,KAkBAC,QAAQC,IAAIH,GAEZ,IAAMI,EAAa,SAACC,GAClB,IAAMC,EAAQ,YAAON,GACrBM,EAASC,OAAOF,EAAO,GACvBJ,EAAQK,IAGV,OACE,oBAAGE,UAAU,MAAb,UACE,qBAAKA,UAAU,qBACf,sBAAKA,UAAU,gBAAf,UACE,uBAAOA,UAAU,QAAQC,KAAK,OAAOC,aAAa,WAAWC,UA3B7C,SAACC,GACP,UAAVA,EAAEC,KACJC,SAASC,uBAAuB,SAAS,GAAGC,WA0B1C,qBACER,UAAU,eACVS,QAAS,WAvBXH,SAASC,uBAAuB,SAAS,GAAGG,MAAQjB,EAAQ,GAAD,mBAAKD,GAAL,CAAWc,SAASC,uBAAuB,SAAS,GAAGG,SAChHjB,EAAQD,GAIdc,SAASC,uBAAuB,SAAS,GAAGG,MAAQ,IAgBhD,mBASA,qBAAKV,UAAU,aAAaS,QAAS,kBAAMhB,EAAQ,KAAnD,sBAIF,qBAAKO,UAAU,OAAf,SACGR,EAAKmB,KAAI,SAACC,EAAMf,GACf,OACE,sBAAKG,UAAU,YAAf,UACGY,EACD,qBACEZ,UAAU,SACVa,IAAI,GACJC,IAAKC,EACLN,QAASb,gBC9CVoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,SAM1BZ,M","file":"static/js/main.e950385d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/x.1415964a.png\";","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Remove from \"./x.png\";\n\nfunction App() {\n  const [list, setList] = useState([\"first task\"]);\n\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      document.getElementsByClassName(\"green\")[0].click()\n    }\n  }\n\n  const addInput = () => {\n    if (document.getElementsByClassName(\"input\")[0].value) {setList([...list, document.getElementsByClassName(\"input\")[0].value]);}\n    else {setList(list)}\n  };\n\n  const clearInput = () => {\n    document.getElementsByClassName(\"input\")[0].value = \"\";\n  };\n\n  console.log(list);\n\n  const removeItem = (index) => {\n    const newArray = [...list];\n    newArray.splice(index, 1);\n    setList(newArray);\n  };\n\n  return (\n    <p className=\"app\">\n      <div className=\"button-container\"></div>\n      <div className=\"input-wrapper\">\n        <input className=\"input\" type=\"text\" defaultValue=\"new task\" onKeyDown={handleKeyDown} />\n        <div\n          className=\"button green\"\n          onClick={() => {\n            addInput();\n            clearInput();\n          }}\n        >\n          enter\n        </div>\n        <div className=\"button red\" onClick={() => setList([])}>\n          clear\n        </div>\n      </div>\n      <div className=\"list\">\n        {list.map((item, index) => {\n          return (\n            <div className=\"list-item\">\n              {item}\n              <img\n                className=\"delete\"\n                alt=\"\"\n                src={Remove}\n                onClick={removeItem}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </p>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}